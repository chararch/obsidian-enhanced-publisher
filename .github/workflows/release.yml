name: Release Obsidian Plugin

on:
  release:
    types: [published] # 在Release被发布时触发

# 显式声明工作流需要的权限
permissions:
  contents: write # 允许写入仓库内容（包括上传Release附件）

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # 或者你需要的Node.js版本

      - name: Install dependencies
        run: npm install

      - name: Build plugin
        run: npm run build # 运行构建命令，生成 main.js

      # --- 打包并上传 ZIP 文件 (保持不变) ---
      - name: Prepare Release Files for ZIP
        run: |
          mkdir plugin-release
          cp main.js manifest.json plugin-release/
          cp styles.css plugin-release/ || true # 复制 styles.css (如果存在)

      - name: Create ZIP archive
        run: |
          cd plugin-release
          zip ../obsidian-enhanced-publisher-${{ github.ref_name }}.zip ./*

      - name: Upload Release ZIP Asset
        id: upload-zip-asset # 给这个步骤一个ID，方便调试
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./obsidian-enhanced-publisher-${{ github.ref_name }}.zip
          asset_name: obsidian-enhanced-publisher-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      # --- 上传独立文件 ---
      - name: Upload main.js Asset
        id: upload-mainjs-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./main.js       # 指定 main.js 的路径
          asset_name: main.js         # 指定上传后的文件名
          asset_content_type: application/javascript

      - name: Upload manifest.json Asset
        id: upload-manifest-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./manifest.json # 指定 manifest.json 的路径
          asset_name: manifest.json   # 指定上传后的文件名
          asset_content_type: application/json

      - name: Upload styles.css Asset (if exists)
        id: upload-styles-asset
        # 只有当 styles.css 文件存在时才运行此步骤
        if: ${{ hashFiles('styles.css') != '' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./styles.css    # 指定 styles.css 的路径
          asset_name: styles.css      # 指定上传后的文件名
          asset_content_type: text/css